name: Terraform Module Tests

on:
  pull_request:
    paths:
      - 'scripts/terraform/**'
      - '!scripts/terraform/logs/**'
      - '!scripts/terraform/staging/**'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  terraform-tests:
    runs-on: ubuntu-latest
    name: Test avm-tf-to-ipm-module
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup PowerShell
      uses: actions/setup-powershell@v1
      
    - name: Install Pester
      shell: pwsh
      run: |
        Write-Host "Installing Pester v5..."
        Install-Module -Name Pester -Force -SkipPublisherCheck -Scope CurrentUser -MinimumVersion 5.0
        Import-Module Pester -Force
        Write-Host "Installed Pester version: $((Get-Module Pester).Version)"
        
    - name: Validate test environment
      shell: pwsh
      working-directory: scripts/terraform/tests
      run: |
        Write-Host "=== Validating Test Environment ==="
        .\Validate-TestEnvironment.ps1
        
    - name: Run all tests
      shell: pwsh
      working-directory: scripts/terraform/tests
      run: |
        Write-Host "=== Running All Tests ==="
        .\Run-Tests.ps1
        
    - name: Run Convert-PackageName specific tests
      shell: pwsh
      working-directory: scripts/terraform/tests
      run: |
        Write-Host "=== Running Convert-PackageName Tests ==="
        .\Run-Tests.ps1 -TestName "Convert-PackageName.Tests.ps1"
        
    - name: Generate code coverage
      shell: pwsh
      working-directory: scripts/terraform/tests
      run: |
        Write-Host "=== Generating Code Coverage ==="
        .\Run-Tests.ps1 -CodeCoverage $true
        
    - name: Run CI tests with JUnit output
      shell: pwsh
      working-directory: scripts/terraform/tests
      run: |
        Write-Host "=== Running CI Tests ==="
        .\Run-Tests.ps1 -CI $true -OutputFormat "JUnitXml"
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          scripts/terraform/tests/TestResults.junit.xml
          scripts/terraform/tests/CodeCoverage.xml
          scripts/terraform/tests/logs/
        retention-days: 30
        
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: PowerShell Pester Tests
        path: scripts/terraform/tests/TestResults.junit.xml
        reporter: java-junit
        fail-on-error: true
        
    - name: Add PR comment with results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && (success() || failure())
      with:
        script: |
          const fs = require('fs');
          
          let comment = "## üß™ Terraform Module Test Results\n\n";
          
          // Check if test files exist and add status
          const testFile = 'scripts/terraform/tests/TestResults.junit.xml';
          const coverageFile = 'scripts/terraform/tests/CodeCoverage.xml';
          
          if (fs.existsSync(testFile)) {
            comment += "‚úÖ **Test Results**: Generated successfully\n";
          } else {
            comment += "‚ùå **Test Results**: Failed to generate\n";
          }
          
          if (fs.existsSync(coverageFile)) {
            comment += "üìä **Code Coverage**: Report available\n";
          } else {
            comment += "üìä **Code Coverage**: Report not generated\n";
          }
          
          comment += "\n### Tests Executed:\n";
          comment += "1. ‚úÖ All module tests\n";
          comment += "2. ‚úÖ Convert-PackageName specific tests\n";
          comment += "3. ‚úÖ Code coverage analysis\n";
          comment += "4. ‚úÖ CI/CD format tests\n";
          
          comment += "\n*Test artifacts are available in the workflow run.*";
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });